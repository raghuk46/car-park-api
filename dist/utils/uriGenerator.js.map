{"version":3,"sources":["../../src/utils/uriGenerator.js"],"names":["URIGenerator","controllerAction","params","id","caArray","split","routeData","RoutesCollection","uri","bindParams","action","method","httpMethod","match","replacement","uriParam","replacedParams","exec","toString","replace","push","paramsForQueryString","Object","keys","forEach","p","includes","length","queryString","stringify"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,Y;;;;;;;2BACGC,gB,EAAkBC,M,EAAQC,E,EAAI;AACnC,YAAMC,OAAO,GAAGH,gBAAgB,CAACI,KAAjB,CAAuB,GAAvB,CAAhB;AACA,YAAMC,SAAS,GAAGC,0BAAiBH,OAAO,CAAC,CAAD,CAAxB,EAA6BA,OAAO,CAAC,CAAD,CAApC,CAAlB;AACA,YAAMI,GAAG,GAAGN,MAAM,GAAG,KAAKO,UAAL,CAAgBH,SAAS,CAACE,GAA1B,EAA+BN,MAA/B,CAAH,GAA4CI,SAAS,CAACE,GAAxE;AAEA,aAAO;AACLL,QAAAA,EAAE,EAAEA,EAAE,IAAIG,SAAS,CAACI,MADf;AAELC,QAAAA,MAAM,EAAEL,SAAS,CAACM,UAFb;AAGLJ,QAAAA;AAHK,OAAP;AAKD;;;+BAEUA,G,EAAKN,M,EAAQ;AACtB,UAAIW,KAAJ;AACA,UAAIC,WAAJ;AACA,UAAIC,QAAQ,GAAGP,GAAf;AACA,YAAMQ,cAAc,GAAG,EAAvB;;AAEA,aAAQH,KAAK,GAAG,iBAAiBI,IAAjB,CAAsBF,QAAtB,CAAhB,EAAkD;AAChDD,QAAAA,WAAW,GAAGZ,MAAM,CAACW,KAAK,CAAC,CAAD,CAAN,CAAN,CAAiBK,QAAjB,MAA+B,EAA7C;;AACA,YAAIJ,WAAW,KAAK,EAApB,EAAwB;AACtBC,UAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAkB,IAAGN,KAAK,CAAC,CAAD,CAAI,EAA9B,EAAiC,EAAjC,CAAX;AACD,SAFD,MAEO;AACLE,UAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiBN,KAAK,CAAC,CAAD,CAAtB,EAA2BC,WAA3B,CAAX;AACAE,UAAAA,cAAc,CAACI,IAAf,CAAoBP,KAAK,CAAC,CAAD,CAAzB;AACD;AACF;;AAED,YAAMQ,oBAAoB,GAAG,EAA7B;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYrB,MAAZ,EAAoBsB,OAApB,CAA6BC,CAAD,IAAO;AACjC,YAAI,CAACT,cAAc,CAACU,QAAf,CAAwBD,CAAxB,CAAL,EAAiC;AAC/BJ,UAAAA,oBAAoB,CAACI,CAAD,CAApB,GAA0BvB,MAAM,CAACuB,CAAD,CAAhC;AACD;AACF,OAJD;;AAMA,UAAIH,MAAM,CAACC,IAAP,CAAYF,oBAAZ,EAAkCM,MAAlC,GAA2C,CAA/C,EAAkD;AAChDZ,QAAAA,QAAQ,GAAI,GAAEA,QAAS,IAAGa,qBAAYC,SAAZ,CAAsBR,oBAAtB,CAA4C,EAAtE;AACD;;AAED,aAAON,QAAP;AACD;;;;;;eAGYf,Y","sourcesContent":["import queryString from 'query-string';\nimport RoutesCollection from './routesCollection';\n\nclass URIGenerator {\n  getURI(controllerAction, params, id) {\n    const caArray = controllerAction.split('_');\n    const routeData = RoutesCollection[caArray[0]][caArray[1]];\n    const uri = params ? this.bindParams(routeData.uri, params) : routeData.uri;\n\n    return {\n      id: id || routeData.action,\n      method: routeData.httpMethod,\n      uri,\n    };\n  }\n\n  bindParams(uri, params) {\n    let match;\n    let replacement;\n    let uriParam = uri;\n    const replacedParams = [];\n\n    while ((match = /:([\\w_]+)\\??/gi.exec(uriParam))) {\n      replacement = params[match[1]].toString() || '';\n      if (replacement === '') {\n        uriParam = uriParam.replace(`/${match[0]}`, '');\n      } else {\n        uriParam = uriParam.replace(match[0], replacement);\n        replacedParams.push(match[1]);\n      }\n    }\n\n    const paramsForQueryString = {};\n    Object.keys(params).forEach((p) => {\n      if (!replacedParams.includes(p)) {\n        paramsForQueryString[p] = params[p];\n      }\n    });\n\n    if (Object.keys(paramsForQueryString).length > 0) {\n      uriParam = `${uriParam}?${queryString.stringify(paramsForQueryString)}`;\n    }\n\n    return uriParam;\n  }\n}\n\nexport default URIGenerator;\n"],"file":"uriGenerator.js"}
{"version":3,"sources":["../../src/controllers/BaseController.js"],"names":["BaseController","params","query","req","next","body","send","uriGenerator","logger","repository","redis","err","statusCode","status","error","message","data","jsonData","info","location"],"mappings":";;;;;;;;;;;;;;;;;;;IAAMA,c;AACJ,0BAAY;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,IAAlC;AAAwCC,IAAAA,YAAxC;AAAsDC,IAAAA,MAAtD;AAA8DC,IAAAA,UAA9D;AAA0EC,IAAAA;AAA1E,GAAZ,EAA+F;AAAA;;AAC7F,SAAKH,YAAL,GAAoBA,YAApB;AACA,SAAKN,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;;;0BAEKC,G,EAAK;AACT,YAAMC,UAAU,GAAGD,GAAG,CAACC,UAAJ,IAAkB,GAArC;AACA,YAAMC,MAAM,GAAGF,GAAG,CAACE,MAAJ,IAAc,OAA7B;AACA,WAAKL,MAAL,CAAYM,KAAZ,iCAAuBH,GAAvB;AAA4BE,QAAAA,MAA5B;AAAoCD,QAAAA,UAApC;AAAgDG,QAAAA,OAAO,EAAE;AAAzD;AACA,WAAKT,IAAL,CAAUM,UAAV,oBAA2BD,GAA3B;AACD;;;kCAEaE,M,EAAQE,O,EAASC,I,EAAM;AACnC,YAAMC,QAAQ,GAAG;AAAEJ,QAAAA,MAAM,EAAE,OAAV;AAAmBE,QAAAA,OAAnB;AAA4BC,QAAAA;AAA5B,OAAjB;AAEA,YAAMJ,UAAU,GAAGC,MAAnB;AACA,WAAKL,MAAL,CAAYU,IAAZ,CAAiBD,QAAjB;AACA,WAAKX,IAAL,CAAUM,UAAV,EAAsBK,QAAtB;AACD;;;4BAEOE,Q,EAAUH,I,EAAM;AACtB,UAAIG,QAAJ,EAAc;AACZ,aAAKb,IAAL,CAAU,GAAV,EAAe,IAAf,EAAqBa,QAArB;AACD;;AAED,WAAKb,IAAL,CAAU,GAAV,EAAeU,IAAf;AACD;;;uBAEEA,I,EAAM;AACP,WAAKR,MAAL,CAAYU,IAAZ,CAAiBF,IAAjB;AACA,WAAKV,IAAL,CAAU,GAAV,EAAeU,IAAf;AACD;;;+BAEUA,I,EAAMD,OAAO,GAAG,E,EAAIF,MAAM,GAAG,G,EAAK;AAC3C,WAAKL,MAAL,CAAYU,IAAZ,CAAiBF,IAAjB;AAEA,YAAMC,QAAQ,GAAG,EAAjB;AACAA,MAAAA,QAAQ,CAACJ,MAAT,GAAkB,SAAlB;AAEA,UAAIG,IAAI,KAAK,IAAb,EAAmBC,QAAQ,CAACD,IAAT,GAAgBA,IAAhB;AACnB,UAAID,OAAO,KAAK,EAAhB,EAAoBE,QAAQ,CAACF,OAAT,GAAmBA,OAAnB;AAEpB,WAAKT,IAAL,CAAUO,MAAV,EAAkBI,QAAlB;AACD;;;gCAEW;AACV,WAAKX,IAAL,CAAU,GAAV;AACD;;;;;;eAGYN,c","sourcesContent":["class BaseController {\n  constructor({ params, query, req, next, body, send, uriGenerator, logger, repository, redis }) {\n    this.uriGenerator = uriGenerator;\n    this.params = params;\n    this.query = query;\n    this.req = req;\n    this.next = next;\n    this.body = body;\n    this.send = send;\n    this.logger = logger;\n    this.repository = repository;\n    this.redis = redis;\n  }\n\n  error(err) {\n    const statusCode = err.statusCode || 500;\n    const status = err.status || 'error';\n    this.logger.error({ ...err, status, statusCode, message: 'something went wrong' });\n    this.send(statusCode, { ...err });\n  }\n\n  errorResponse(status, message, data) {\n    const jsonData = { status: 'error', message, data };\n\n    const statusCode = status;\n    this.logger.info(jsonData);\n    this.send(statusCode, jsonData);\n  }\n\n  created(location, data) {\n    if (location) {\n      this.send(201, null, location);\n    }\n\n    this.send(201, data);\n  }\n\n  ok(data) {\n    this.logger.info(data);\n    this.send(200, data);\n  }\n\n  okResponse(data, message = '', status = 200) {\n    this.logger.info(data);\n\n    const jsonData = {};\n    jsonData.status = 'success';\n\n    if (data !== null) jsonData.data = data;\n    if (message !== '') jsonData.message = message;\n\n    this.send(status, jsonData);\n  }\n\n  noContent() {\n    this.send(204);\n  }\n}\n\nexport default BaseController;\n"],"file":"BaseController.js"}
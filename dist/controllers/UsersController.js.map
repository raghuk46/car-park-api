{"version":3,"sources":["../../src/controllers/UsersController.js"],"names":["UsersController","registrationSchema","validateAsync","body","response","repository","user","createUser","statusCode","created","ok","err","errorResponse","details","authSchema","authenticate","console","log","getById","req","userId","logger","error","BaseController"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,e;;;;;;;;;;;;;qCACa;AACf,UAAI;AACF,cAAMC,gCAAmBC,aAAnB,CAAiC,KAAKC,IAAtC,CAAN;AAEA,cAAMC,QAAQ,GAAG,MAAM,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBC,UAArB,CAAgC,KAAKJ,IAArC,CAAvB;AAEAC,QAAAA,QAAQ,CAACI,UAAT,KAAwB,GAAxB,GAA8B,KAAKC,OAAL,CAAa,EAAb,EAAiBL,QAAjB,CAA9B,GAA2D,KAAKM,EAAL,CAAQN,QAAR,CAA3D;AACD,OAND,CAME,OAAOO,GAAP,EAAY;AACZ,aAAKC,aAAL,CAAmB,GAAnB,EAAwB,sBAAxB,EAAgDD,GAAG,CAACE,OAApD;AACD;AACF;;;yCAEoB;AACnB,UAAI;AACF,cAAMC,wBAAWZ,aAAX,CAAyB,KAAKC,IAA9B,CAAN;AACA,cAAMC,QAAQ,GAAG,MAAM,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBS,YAArB,CAAkC,KAAKZ,IAAvC,CAAvB;AAEA,aAAKO,EAAL,CAAQN,QAAR;AACD,OALD,CAKE,OAAOO,GAAP,EAAY;AACZK,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,aAAKC,aAAL,CAAmB,GAAnB,EAAwB,sBAAxB,EAAgDD,GAAG,CAACE,OAApD;AACD;AACF;;;wCAEmB;AAClB,UAAI;AACF,cAAMT,QAAQ,GAAG,MAAM,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBY,OAArB,CAA6B,KAAKC,GAAL,CAASC,MAAtC,CAAvB;AACA,aAAKV,EAAL,CAAQN,QAAR;AACD,OAHD,CAGE,OAAOO,GAAP,EAAY;AACZ,aAAKU,MAAL,CAAYC,KAAZ,CAAkBX,GAAlB;AACD;AACF;;;;EAhC2BY,wB;;eAmCfvB,e","sourcesContent":["import BaseController from './BaseController';\nimport { registrationSchema, authSchema } from 'helpers/validations';\n\nclass UsersController extends BaseController {\n  async register() {\n    try {\n      await registrationSchema.validateAsync(this.body);\n\n      const response = await this.repository.user.createUser(this.body);\n\n      response.statusCode === 201 ? this.created('', response) : this.ok(response);\n    } catch (err) {\n      this.errorResponse(422, 'Unprocessible Entity', err.details);\n    }\n  }\n\n  async authenticate() {\n    try {\n      await authSchema.validateAsync(this.body);\n      const response = await this.repository.user.authenticate(this.body);\n\n      this.ok(response);\n    } catch (err) {\n      console.log(err);\n      this.errorResponse(422, 'Unprocessible Entity', err.details);\n    }\n  }\n\n  async getUserInfo() {\n    try {\n      const response = await this.repository.user.getById(this.req.userId);\n      this.ok(response);\n    } catch (err) {\n      this.logger.error(err);\n    }\n  }\n}\n\nexport default UsersController;\n"],"file":"UsersController.js"}